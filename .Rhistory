plt.annotate(
label,
(x,y ) ,
va='center',
ha='center'
)
plt.show()
plot_dat = plot_bc[(plot_bc["ROI"] == "W0A1") & (plot_bc["TileInROI"] == "P1")]
x = plot_dat.sort_values(by="n_spots", ascending=False)["n_spots"].tolist()
circles = circ.circlify(x)
#labels = plot_dat.sort_values(by="n_spots", ascending=False)["Gene"].tolist()
# print circles
for circle, label in zip(circles, labels):
x, y, r = circle
ax.add_patch(plt.Circle((x, y), r, linewidth=2))
plt.annotate(
label,
(x,y ) ,
va='center',
ha='center'
)
lt.show()
plt.show()
plt.close()
plot_dat = plot_bc[(plot_bc["ROI"] == "W0A1") & (plot_bc["TileInROI"] == "P1")]
x = plot_dat.sort_values(by="n_spots", ascending=False)["n_spots"].tolist()
circles = circ.circlify(x)
#labels = plot_dat.sort_values(by="n_spots", ascending=False)["Gene"].tolist()
# print circles
for circle, label in zip(circles, labels):
x, y, r = circle
ax.add_patch(plt.Circle((x, y), r, linewidth=2))
plt.annotate(
label,
(x,y ) ,
va='center',
ha='center'
)
plt.show()
circles
plt.close()
x = plot_dat.sort_values(by="n_spots", ascending=False)["n_spots"].tolist()
circles = circ.circlify(x)
#labels = plot_dat.sort_values(by="n_spots", ascending=False)["Gene"].tolist()
# print circles
for circle, label in zip(circles, labels):
x, y, r = circle
ax.add_patch(plt.Circle((x, y), r, linewidth=20))
plt.annotate(
label,
(x,y ) ,
va='center',
ha='center'
)
plt.show()
plt.close()
x = plot_dat.sort_values(by="n_spots", ascending=False)["n_spots"].tolist()
circles = circ.circlify(x)
#labels = plot_dat.sort_values(by="n_spots", ascending=False)["Gene"].tolist()
# print circles
for circle, label in zip(circles, labels):
x, y, r = circle
ax.add_patch(plt.Circle((x, y), r, fill=True, linewidth=20))
plt.annotate(
label,
(x,y ) ,
va='center',
ha='center'
)
plt.show()
sns.scatterplot(plot_dat, x="P1", y="n_spots", hue="n_spots")
View(plot_dat)
sns.scatterplot(plot_dat, x="TileInROI", y="n_spots", hue="n_spots")
plt.show()
sns.scatterplot(plot_dat, x="TileInROI", y="Gene", hue="n_spots")
plt.show()
sns.scatterplot(plot_bc[plot_bc["ROI"] == "W0A1"], x="Gene", y="TileInROI", hue="n_spots")
plt.show()
plt.close()
sns.scatterplot(plot_bc[plot_bc["ROI"] == "W0A1"], x="Gene", y="TileInROI", hue="n_spots")
plt.show()
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
smaller <- diamonds |>
filter(carat <= 2.5)
smaller |>
ggplot(aes(x = carat)) +
geom_freqpoly(binwidth = 0.01)
library(tidyverse)
setwd("C:/Users/eva.maleckova/OneDrive - Resolve BioSciences GmbH/Courses_Learning/productive-r-workflow/")
# Read data using readr
data <- readr::read_csv("input/data_2.txt")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Plot using ggplot2
data %>%
na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Penguin Bill Dimensions") +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
library(tidyverse)
# Read data using readr
data <- readr::read_csv("input/data_2.txt")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Plot using ggplot2
data %>%
na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Penguin Bill Dimensions") +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
getwd()
library(readxl)
# Read data using readr
data <- read_xlsx("input/data.xlsx")
?return()
234*411
234*311
multi_function <- function(a){}
multi_function <- function(a){
result <- a * 234
return(result)
}
multi_function(311)
sum_function <- function(x, y){
return(x + y)
}
sum_function(3256, 8934)
5 %% 2
4 %% 2
7 %% 2
8 %% 3
library(ggplot2)
View(data)
plot_bill_scatter <- function(dat, island, species){
p <- ggplot(dat[dat$island == island & dat$species == species, ], aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point()
return(p)
}
plot_bill_scatter(data, Torgersen, Adelie)
plot_bill_scatter(data, "Torgersen", "Adelie")
# Official solution
# plot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
library(dplyr)
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
# Custom functions
source("R/functions.R")
# Packages
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
# Custom functions
source("R/functions.R")
# Read data using readr
data <- read_xlsx("input/data.xlsx")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Custom functions
source("R/functions.R")
# Plot with a custom function
create_scatterplot(data, "Adelie", "Torgersen")
# Packages
library(readxl)
# Read data using readr
data <- read_xlsx("input/data.xlsx")
data_clean <- data[-c(23, 24), ]
# Read data using readr
data <- read_xlsx("input/data.xlsx")
data_clean <- data[-c(23, 48), ]
saveRDS(data_clean, "input/data_clean.rds")
# Or cleaned data
data_clean <- readRDS("input/data_clean.rds")
#| message: false
#| warning: false
#| code-summary: "Data loading"
# Packages
library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
# Custom functions
source("R/functions.R")
# Read data using readr
data <- read_xlsx("input/data.xlsx")
# Or cleaned data
data_clean <- readRDS("input/data_clean.rds")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Plot using ggplot2
data %>%
na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Penguin Bill Dimensions") +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
# Plot with a custom function
create_scatterplot(data, "Adelie", "Torgersen")
#| layout-ncol: 2
mean(data$bill_length_mm)
mean(data$bill_depth_mm)
View(data)
View(data_clean)
mean(as.numeric(data$bill_length_mm))
mean(as.numeric(data$bill_length_mm))
mean(as.numeric(das.character(ata$bill_length_mm)))
mean(as.numeric(as.character(data$bill_length_mm)))
data$bill_length_mm <- as.numeric(data$bill_length_mm)
View(data)
data$bill_depth_mm <- as.numeric(data$bill_depth_mm)
mean(data$bill_length_mm)
mean(data$bill_depth_mm)
mean(data$bill_length_mm, na.rm = T)
#| layout-ncol: 2
mean(data$bill_length_mm, na.rm = T)
mean(data$bill_depth_mm, na.rm = T)
library(patchwork)
#| layout-ncol: 2
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE))
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))
#| fig-cap-location: margin
#| fig-cap: "There is actually a positive correlation when split by species."
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")
p1 + p2 + p3
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "Torgersen", "#6689c6")
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "Torgersen")
p1 + p2 + p3
#| fig-cap-location: margin
#| fig-cap: "There is actually a positive correlation when split by species."
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "Torgersen")
p2 <- create_scatterplot(data, "Chinstrap", "Torgersen")
p3 <- create_scatterplot(data, "Gentoo", "Torgersen")
p1 + p2 + p3
#| fig-cap-location: margin
#| fig-cap: "There is actually a positive correlation when split by species."
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "Torgersen")
p2 <- create_scatterplot(data, "Chinstrap", "Torgersen")
p3 <- create_scatterplot(data, "Gentoo", "Torgersen")
p1 + p2 + p3
library(DT)
library(DT)
datatable(data = data)
# load the tidyverse
library(tidyverse)
library(hrbrthemes)    # ipsum theme for ggplot2 charts
library(patchwork)     # combine charts together
library(DT)
# Read the clean dataset
data <- readRDS(file = "../input/clean_data.rds")
datatable(data = data)
#| layout-ncol: 2
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE))
bill_length_adelie <- data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
filter(species == "Adelie") %>%
pull(average_bill_length) %>%
round(2)
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))
library(knitr)
bill_length_adelie <- data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
filter(species == "Adelie") %>%
pull(average_bill_length) %>%
round(2) %>%
kable()
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE))
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
kable()
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE)) %>%
kable()
#| layout-ncol: 2
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
kable()
bill_length_adelie <- data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
filter(species == "Adelie") %>%
pull(average_bill_length) %>%
round(2)
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE)) %>%
kable()
data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
library(plotly)
p <- data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
ggplotly(p)
View(data)
data[, 3:5] <- as.numeric(data[, 3:5])
data <- apply(data[, 3:5], as.numeric)
data <- apply(data[, 3:5], 2, as.numeric)
View(data)
# Read the clean dataset
data <- readRDS(file = "../input/clean_data.rds")
View(data)
data[, 3:5] <- apply(data[, 3:5], 2, as.numeric)
View(data)
datatable(data = data)
p <- data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
ggplotly(p)
#| layout-ncol: 2
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
kable()
bill_length_adelie <- data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
filter(species == "Adelie") %>%
pull(average_bill_length) %>%
round(2)
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE)) %>%
kable()
#| label: define-custom-plot-theme
yan_holtz_theme <- function() {
theme_ipsum() +
theme(
plot.title = element_text(color = "#69b3a2", size = 18, face = "bold"),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 7)
)
}
### Make it default for all plots
theme_set(yan_holtz_theme())
p <- data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
ggplotly(p)
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
#| layout-ncol: 2
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
kable()
bill_length_adelie <- data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
filter(species == "Adelie") %>%
pull(average_bill_length) %>%
round(2)
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE)) %>%
kable()
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
# load the tidyverse
library(tidyverse)
library(hrbrthemes)    # ipsum theme for ggplot2 charts
library(patchwork)     # combine charts together
library(DT)
library(knitr)
library(plotly)
#| label: define-custom-plot-theme
yan_holtz_theme <- function() {
theme_ipsum() +
theme(
plot.title = element_text(color = "#69b3a2", size = 18, face = "bold"),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 7)
)
}
### Make it default for all plots
theme_set(yan_holtz_theme())
# Source functions
source(file="functions.R")
# Read the clean dataset
data <- readRDS(file = "../input/clean_data.rds")
data[, 3:5] <- apply(data[, 3:5], 2, as.numeric)
datatable(data = data)
p <- data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
ggplotly(p)
#| layout-ncol: 2
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
kable()
bill_length_adelie <- data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE)) %>%
filter(species == "Adelie") %>%
pull(average_bill_length) %>%
round(2)
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE)) %>%
kable()
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")
p1 + p2 + p3
